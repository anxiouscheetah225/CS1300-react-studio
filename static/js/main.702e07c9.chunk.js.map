{"version":3,"sources":["components/BakeryItem.js","App.js","reportWebVitals.js","index.js"],"names":["BakeryItem","_ref","name","price","description","addToCart","react_default","a","createElement","onClick","bakeryData","forEach","item","image","process","App","_useState","useState","Object","toConsumableArray","_useState3","slicedToArray","_useState4","cart","setCart","className","map","index","components_BakeryItem","key","concat","addtoCart","filter","x","removeFromCart","reduce","acc","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"6nEAaeA,EAXI,SAAbA,EAAUC,GAA8C,IAAzCC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAaC,EAASJ,EAATI,UAC3C,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKN,GACLI,EAAAC,EAAAC,cAAA,cAAML,GACNG,EAAAC,EAAAC,cAAA,SAAIJ,GACJE,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMJ,EAAUL,KAAY,iBCFzDU,EAAWC,QAAQ,SAACC,GAClBA,EAAKC,MAAQC,wBAA+BF,EAAKC,QAwDpCE,MApDf,WAEE,IAAAC,EAEiBC,mBAASC,OAAAC,EAAA,EAAAD,CAAIR,IAAjBU,GAA6BF,OAAAG,EAAA,EAAAH,CAAAF,EAAA,GAA7B,GACWC,mBAAS,KAAGK,EAAAJ,OAAAG,EAAA,EAAAH,CAAAE,EAAA,GAA7BG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAUpB,OACEhB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACbnB,EAAAC,EAAAC,cAAA,uBAECE,EAAWgB,IAAI,SAACd,EAAMe,GAErB,OAAOrB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACpBnB,EAAAC,EAAAC,cAACoB,EAAU,CACPC,IAAOF,EACPzB,KAAQU,EAAKV,KACbC,MAASS,EAAKT,MACdC,YAAeQ,EAAKR,YACpBC,UAAW,kBArBP,SAACO,GACjBY,EAAO,GAAAM,OAAAZ,OAAAC,EAAA,EAAAD,CAAKK,GAAI,CAAEX,KAoBUmB,CAAUnB,UAMpCN,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACXnB,EAAAC,EAAAC,cAAA,uBACCe,GAAQA,EAAKG,IAAI,SAACd,GACjB,OAAON,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACpBnB,EAAAC,EAAAC,cAAA,UAAKI,EAAKV,MACVI,EAAAC,EAAAC,cAAA,UAAKI,EAAKT,OACVG,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBA7BN,SAACG,GACtBY,EAAQD,EAAKS,OAAO,SAACC,GAAC,OAAKA,EAAE/B,OAASU,EAAKV,QA4BVgC,CAAetB,KAAM,uBAIlDN,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,SAAO,eAAcF,EAAKY,OAAO,SAACC,EAAKxB,GAAI,OAAKwB,EAAMxB,EAAKT,OAAO,OC3CzEkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAzC,GAAiD,IAA9C2C,EAAM3C,EAAN2C,OAAQC,EAAM5C,EAAN4C,OAAQC,EAAM7C,EAAN6C,OAAQC,EAAM9C,EAAN8C,OAAQC,EAAO/C,EAAP+C,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/C,EAAAC,EAAAC,cAACF,EAAAC,EAAM+C,WAAU,KACfhD,EAAAC,EAAAC,cAAC+C,EAAG,QAORlB","file":"static/js/main.702e07c9.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst BakeryItem = ({name, price, description, addToCart}) => { \r\n    return(\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <h2>${price}</h2>\r\n            <p>{description}</p>\r\n            <button onClick={() => addToCart(BakeryItem)}>Add to Cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BakeryItem\r\n","import \"./App.css\";\nimport React, { useState } from \"react\"\nimport bakeryData from \"./assets/bakery-data.json\";\nimport BakeryItem from \"./components/BakeryItem.js\"\n\n/* ####### DO NOT TOUCH -- this makes the image URLs work ####### */\nbakeryData.forEach((item) => {\n  item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n});\n/* ############################################################## */\n\nfunction App() {\n  // TODO: use useState to create a state variable to hold the state of the cart\n  /* add your cart state code here */\n\n  const [bakery] = useState([...bakeryData])\n  const [cart, setCart] = useState([])\n\n  const addtoCart = (item) => {\n    setCart([...cart, item])\n  }\n\n  const removeFromCart = (item) => {\n    setCart(cart.filter((x) => x.name !== item.name))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"menu\">\n        <h1>My Bakery</h1>\n\n        {bakeryData.map((item, index) => {\n          \n          return <div className=\"item\">\n            <BakeryItem\n                key = {index}\n                name = {item.name}\n                price = {item.price}\n                description = {item.description}\n                addToCart={()=> addtoCart(item)}\n            />\n          </div>\n        })}\n      </div>\n      \n      <div className=\"cart\">\n          <h1>Your Cart</h1>\n          {cart && cart.map((item) => {\n            return <div className=\"item\">\n              <h2>{item.name}</h2>\n              <h2>{item.price}</h2>\n              <button onClick={() => removeFromCart(item)}>Remove from Cart</button>\n            </div>\n          }\n        )}\n        <h1 className=\"total\">Total Cost: {cart.reduce((acc, item) => acc + item.price, 0)}</h1>\n\n        {/* {arenas.reduce((acc, curr) => acc + parseFloat(curr.hours.$numberDecimal), 0)} */}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}